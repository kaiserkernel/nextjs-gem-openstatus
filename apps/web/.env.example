# RESEND for email
RESEND_API_KEY=resend-api-key

# UPSTASH for queue
QSTASH_CURRENT_SIGNING_KEY=qstash-current-signing-key
QSTASH_NEXT_SIGNING_KEY=qstash-next-signing-key
QSTASH_TOKEN=qstash-token
QSTASH_URL=https://qstash.upstash.io/v1/publish/

# UPSTASH redis for waiting list
UPSTASH_REDIS_REST_URL=test
UPSTASH_REDIS_REST_TOKEN=test

# TINY BIRD for time series data (trackers)
TINY_BIRD_API_KEY=tiny-bird-api-key

# TURSO SQLITE
DATABASE_URL=file:./../../openstatus-dev.db
DATABASE_AUTH_TOKEN=any-token

# JITSU - no need to touch on local development
JITSU_HOST="https://your-jitsu-domain.com"
JITSU_WRITE_KEY="jitsu-key:jitsu-secret"

# Solves 'UNABLE_TO_GET_ISSUER_CERT_LOCALLY', see https://github.com/nextauthjs/next-auth/issues/3580
# NODE_TLS_REJECT_UNAUTHORIZED="0"

#  For vercel upload
BLOB_READ_WRITE_TOKEN=blob-read-write-token

# STRIPE
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET_KEY=

# Custom Domains
PROJECT_ID_VERCEL=
TEAM_ID_VERCEL=
VERCEL_AUTH_BEARER_TOKEN=

NEXT_PUBLIC_URL=

NEXT_PUBLIC_SENTRY_DSN=''

# Unkey
UNKEY_API_ID=
UNKEY_TOKEN=

# GCP Messaging Queue
GCP_PROJECT_ID=
GCP_LOCATION=
GCP_CLIENT_EMAIL=
GCP_PRIVATE_KEY=
CRON_SECRET=

EXTERNAL_API_URL=

NEXT_PUBLIC_POSTHOG_KEY=
NEXT_PUBLIC_POSTHOG_HOST=

PLAYGROUND_UNKEY_API_KEY=

# RUM server with separate clickhouse for self-host
CLICKHOUSE_URL=
CLICKHOUSE_USERNAME=
CLICKHOUSE_PASSWORD=

AUTH_SECRET=secret
AUTH_DRIZZLE_URL=file:./../../openstatus-dev.db
AUTH_GITHUB_ID=
AUTH_GITHUB_SECRET=
AUTH_GOOGLE_ID=
AUTH_GOOGLE_SECRET=

PLAIN_API_KEY=